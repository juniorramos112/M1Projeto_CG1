/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package m1projeto;

import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Graphics;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author jrram
 */
public class FrmGame extends javax.swing.JFrame implements Runnable {

    private boolean left;
    private boolean right;
    private boolean fimJogo;
    private boolean keyRestart;
    private boolean start;
    private boolean space;
    private boolean next;
    private long ultimoTiro = 0;
    private int nivel;
    private int status;
    private int controle;
    
    public FrmGame() {

        initComponents();
        createBufferStrategy(2);
        Thread t = new Thread(this);
        t.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1000, 1000));
        setMinimumSize(new java.awt.Dimension(1000, 1000));
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            left = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            right = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_R) {
            keyRestart = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            space = true;
        } else if (evt.getKeyCode() == KeyEvent.VK_S) {
            start = true;
        }
         else if (evt.getKeyCode() == KeyEvent.VK_F) {
            next = true;
        }
       
    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            left = false;
        } else if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            right = false;
        } else if (evt.getKeyCode() == KeyEvent.VK_R) {
            keyRestart = false;
        } else if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
            space = false;
        } else if (evt.getKeyCode() == KeyEvent.VK_S) {
            start = false;
        }
        else if (evt.getKeyCode() == KeyEvent.VK_F) {
            next = false;
        }
    }//GEN-LAST:event_formKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmGame().setVisible(true);
            }
        });
    }

    @Override
    public void run() {

        Graphics g;
        Game game = new Game(getWidth(), getHeight());
        ArrayList<Base> lixo = new ArrayList();
        ArrayList<Base> tiros = new ArrayList();
        ArrayList<Base> tiros2 = new ArrayList();
        ArrayList<Base> inimigos = new ArrayList();
        ArrayList<Base> inimigos2 = new ArrayList();
        Player player = new Player("img/player.png", getWidth(), getHeight());
        Chefe chefe = new Chefe("img/boss.png", getWidth(), getHeight());
        game.inimigo(inimigos, tiros);
        game.inimigo2(inimigos2, tiros, chefe);
        

        while (true) {

            g = getBufferStrategy().getDrawGraphics(); 
            controle = game.controlador(start, keyRestart);
            nivel = game.verificaNivel(inimigos, start);       
            game.shot(tiros, space, player);
            game.eventos(left, right, player);         
            game.shotChefe(tiros2, chefe, nivel);
            game.jogango(g, player, inimigos, inimigos2, tiros, tiros2, chefe, nivel,next);
            game.colideInimigo(tiros, inimigos, inimigos2, lixo, chefe, nivel);
            game.moveInimigos(inimigos, inimigos2, getWidth(), getHeight(), tiros, chefe, nivel);
            game.removeMortos(lixo, inimigos, inimigos2, tiros, nivel);
            status = game.colidePlayer(inimigos, inimigos2,tiros2, lixo, chefe, player, nivel);
         
             
            
            if(status == 0 && controle == 1)
            {
                player.update(g);
            }
            
                 
            g.dispose();
            getBufferStrategy().show();
            
            try {
                Thread.sleep(4);
            } catch (InterruptedException ex) {
            }

        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
